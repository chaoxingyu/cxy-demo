<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<!-- 参考： https://yq.aliyun.com/articles/38271 -->
	<!-- 基本设置   Start -->
	<!-- 模型版本 -->
	<modelVersion>4.0.0</modelVersion>
	<!-- 公司或者组织的唯一标志，并且配置时生成的路径也是由此生成 -->
	<groupId>cxy-demo</groupId>
	<!-- 本项目的唯一ID，一个groupId下面可能多个项目，就是靠artifactId来区分的 -->
	<artifactId>cxy-demo</artifactId>
	<!-- 本项目目前所处的版本号 -->
	<version>1.0.0</version>
	<!-- 打包的机制，如pom,jar, maven-plugin, ejb, war, ear, rar, par，默认为jar -->
	<packaging>pom</packaging>

	<modules>
		<module>commons-lib</module>
		<module>consul-producer</module>
		<module>consul-producer2</module>
		<module>consul-consumer</module>
		<module>consul-consumer-feign</module>
		<module>consul-consumer-feign-hystrix</module>
		<module>config-server-git</module>
		<module>consul-hystrix-dashboard</module>
		<module>consul-hystrix-turbine</module>
		<module>consul-hystrix-turbine-stream</module>
        <module>consul-gateway</module>
        <module>spring-cloud-monitor</module>
    </modules>




	<!-- maven属性 -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<pluginEncoding>UTF-8</pluginEncoding>
		<maven.test.skip>true</maven.test.skip>
		<profile.local>src/profile/local</profile.local>
		<profile.dev>src/profile/dev</profile.dev>
		<profile.uat>src/profile/uat</profile.uat>
		<profile.prod>src/profile/prod</profile.prod>
	</properties>

	<!-- 基本设置   end -->

	<!-- 项目信息设置 Start -->
	<name>cxy-demo</name>
	<description>cxy-demo-parent</description>
	<!-- 项目信息设置 end -->

	<!-- 构建过程的设置 Start -->
	<!-- 注意体会插件配置的顺序，这正体现了一个maven的运行流程 -->
	<build>
		<plugins>
			<!-- 清理插件 -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<!-- 忽略错误 默认为true， -->
					<failOnError>true</failOnError>
					<!-- skip 跳过clean阶段 默认为false -->
					<skip>false</skip>
				</configuration>
			</plugin>
			<!--  maven-resources-plugin 资源插件 -->

			<!-- 编译插件的使用 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<!-- 源代码使用的jdk版本 -->
					<source>${java.version}</source>
					<!-- 构建后生成class文件jdk版本 -->
					<target>${java.version}</target>
					<encoding>${pluginEncoding}</encoding>
				</configuration>
			</plugin>
			<!-- maven-surefire-plugin 单元测试插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.0</version>
				<configuration>
					<!-- 跳过测试阶段 -->
					<skipTests>true</skipTests>
				</configuration>
			</plugin>
			<!-- war包插件 建议配置编码格式和打包名称 -->

			<!-- maven-install-plugin插件一般不需要配置 -->

			<!-- 部署插件 -->
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
				<executions>
					<execution>
						<id>default-deploy</id>
						<phase>deploy</phase>
						<goals>
							<goal>deploy</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>3.2.2</version>
					<configuration>
						<warSourceDirectory>WebContent</warSourceDirectory>
						<webXml>WebContent/WEB-INF/web.xml</webXml>
						<packagingExcludes>WEB-INF/web.xml</packagingExcludes>
						<!-- 要替换的生产配置文件 -->
						<webResources>
							<resource>
								<filtering>true</filtering>
								<directory>${profile.directory}</directory>
								<targetPath>WEB-INF</targetPath>
								<includes>
									<include>**</include>
								</includes>
							</resource>
						</webResources>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<!-- 构建过程的设置 end -->

	<!-- 环境设置 Start -->
	<!-- profile（项目构建）配置 -->
	<profiles>
		<!-- prod配置 -->
		<profile>
			<id>prod</id>
			<properties>
				<profile.directory>${profile.prod}</profile.directory>
			</properties>
		</profile>
		<!-- uat配置 -->
		<profile>
			<id>uat</id>
			<properties>
				<profile.directory>${profile.uat}</profile.directory>
			</properties>
		</profile>
		<!-- dev配置 -->
		<profile>
			<id>dev</id>
			<properties>
				<profile.directory>${profile.dev}</profile.directory>
			</properties>
		</profile>
		<!-- local配置 -->
		<profile>
			<id>local</id>
			<properties>
				<profile.directory>${profile.local}</profile.directory>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
	</profiles>
	<!--仓库配置 -->
	<!--发现依赖和扩展的远程仓库列表 -->
	<repositories>
		<!--包含需要连接到远程仓库的信息 -->
		<repository>
			<!--远程仓库唯一标识符。 -->
			<id>nexus-aliyun</id>
			<!--远程仓库名称 -->
			<name>Nexus aliyun</name>
			<!--远程仓库URL，按protocol://hostname/path形式 -->
			<url>http://maven.aliyun.com/nexus/content/groups/public/</url>
		</repository>
	</repositories>
	<!-- 环境设置 end -->

</project>